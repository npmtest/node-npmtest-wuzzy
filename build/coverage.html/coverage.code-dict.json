{"/home/travis/build/npmtest/node-npmtest-wuzzy/test.js":"/* istanbul instrument in package npmtest_wuzzy */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wuzzy/lib.npmtest_wuzzy.js":"/* istanbul instrument in package npmtest_wuzzy */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_wuzzy = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_wuzzy = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-wuzzy/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-wuzzy && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_wuzzy */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_wuzzy\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_wuzzy.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_wuzzy.rollup.js'] =\n            local.assetsDict['/assets.npmtest_wuzzy.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_wuzzy.__dirname + '/lib.npmtest_wuzzy.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wuzzy/node_modules/wuzzy/index.js":"var _ = require('lodash');\n\nfunction sum (arr) {\n\treturn arr.reduce(function (p, c, i, a) {\n\t\treturn p + c;\n\t});\n}\n\nfunction ensureArr (arr) {\n\tif (_.isArray(arr)) {\n\t\treturn arr;\n\t} else if (typeof arr === 'string') {\n\t\treturn arr.split('');\n\t} else {\n\t\tthrow Error('Parameter must be a string or array.');\n\t}\n}\n\n/**\n * Computes the jaro-winkler distance for two given arrays.\n *\n * NOTE: this implementation is based on the one found in the\n * Lucene Java library.\n *\n * h3 Examples:\n *\n *     wuzzy.jarowinkler(\n *     \t\t['D', 'W', 'A', 'Y', 'N', 'E'],\n *     \t\t['D', 'U', 'A', 'N', 'E']\n *     \t);\n *     \t// -> 0.840\n *\n *     wuzzy.jarowinkler(\n *     \t\t'DWAYNE',\n *     \t\t'DUANE'\n *     \t);\n *     \t// -> 0.840\n *\n * @param  {String/Array} a - the first string/array to compare\n * @param  {String/Array} b - the second string/array to compare\n * @param  {Number} t - the threshold for adding\n * the winkler bonus (defaults to 0.7)\n * @return {Number}   returns the jaro-winkler distance for\n * the two provided arrays.\n */\nexports.jarowinkler = function (a, b, t) {\n\ta = ensureArr(a);\n\tb = ensureArr(b);\n\n\tvar max, min;\n\tif (a.length > b.length) {\n\t\tmax = a;\n\t\tmin = b;\n\t} else {\n\t\tmax = b;\n\t\tmin = a;\n\t}\n\tvar threshold = t ? t : .7;\n\tvar weight = .1;\n\tvar range = Math.floor(Math.max((max.length / 2) - 1, 0));\n\tvar mIdx = [];\n\tvar mFlg = [];\n\tvar mi, xi, xn, c1;\n\tvar matches = 0;\n\tfor (mi = 0; mi < min.length; mi++) {\n\t\tc1 = min[mi];\n\t\tfor (xi = Math.max(mi - range, 0), xn = Math.min(mi + range + 1, max.length);\n\t\t\t xi < xn;\n\t\t\t xi++) {\n\t\t\tif (!mFlg[xi] && (c1 === max[xi])) {\n\t\t\t\tmIdx[mi] = xi;\n\t\t\t\tmFlg[xi] = true;\n\t\t\t\tmatches++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar ma = [];\n\tvar mb = [];\n\tvar i, si;\n\tvar trans = 0;\n\tvar prefix = 0;\n\tfor (i = 0, si = 0; i < min.length; i++) {\n\t\tif (mIdx[i] > -1) {\n\t\t\tma[si] = min[i];\n\t\t\tsi++;\n\t\t}\n\t}\n\tfor(i = 0, si = 0; i < max.length; i++) {\n\t\tif (mFlg[i]) {\n\t\t\tmb[si] = max[i];\n\t\t\tsi++;\n\t\t}\n\t}\n\tfor (mi = 0; mi < ma.length; mi++) {\n\t\tif (ma[mi] !== mb[mi]) {\n\t\t\ttrans++;\n\t\t}\n\t}\n\tfor (mi = 0; mi < min.length; mi++) {\n\t\tif (a[mi] === b[mi]) {\n\t\t\tprefix++;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar m = matches;\n\tvar t = trans / 2;\n\tif (!m) {\n\t\treturn 0;\n\t} else {\n\t\tvar j = (m / a.length + m / b.length + (m - t) / m) / 3\n\t\tvar jw = (j < threshold\n\t\t\t? j\n\t\t\t: (j + Math.min(weight, 1 / max.length) * prefix * (1 - j)));\n\t\treturn jw;\n\t}\n\n}\n\n/**\n * Calculates the levenshtein distance for the\n * two provided arrays and returns the normalized\n * distance.\n *\n * h3 Examples:\n *\n *     wuzzy.levenshtein(\n *     \t\t['D', 'W', 'A', 'Y', 'N', 'E'],\n *     \t\t['D', 'U', 'A', 'N', 'E']\n *     \t);\n *     \t// -> 0.66666667\n *\n * \t\tor\n *\n *     wuzzy.levenshtein(\n *     \t\t'DWAYNE',\n *     \t\t'DUANE'\n *     \t);\n *     \t// -> 0.66666667\n * \n * @param  {String/Array} a - the first string/array to compare\n * @param  {String/Array} b - the second string/array to compare\n * @param  {Object} w - (optional) a set of key/value pairs\n * definining weights for the deletion (key: d), insertion\n * (key: i), and substitution (key: s). default values are\n * 1 for all operations.\n * @return {Number}   returns the levenshtein distance for\n * the two provided arrays.\n */\nexports.levenshtein = function (a, b, w) {\n\ta = ensureArr(a);\n\tb = ensureArr(b);\n\n\tif (a.length === 0) {\n\t\treturn b.length;\n\t}\n\tif (b.length === 0) {\n\t\treturn a.length;\n\t}\n\n\tvar weights = (w ? w : {\n\t\td: 1,\n\t\ti: 1,\n\t\ts: 1\n\t});\n\tvar v0 = [];\n\tvar v1 = [];\n\tvar vlen = b.length + 1;\n\tvar i,j;\n\tvar cost;\n\tvar mlen;\n\n\tfor (i = 0; i < vlen; i++) {\n\t\tv0[i] = i;\n\t}\n\n\tfor (i = 0; i < a.length; i++) {\n\t\tv1[0] = i + 1;\n\n\t\tfor (j = 0; j < b.length; j++) {\n\t\t\tcost = (a[i] === b[j]) ? 0 : weights.s;\n\t\t\tv1[j + 1] = Math.min(\n\t\t\t\tv1[j] + weights.d,\n\t\t\t\tv0[j + 1] + weights.i,\n\t\t\t\tv0[j] + cost\n\t\t\t);\n\t\t}\n\n\t\tfor (j = 0; j < vlen; j++) {\n\t\t\tv0[j] = v1[j];\n\t\t}\n\t}\n\n\tmlen = Math.max(a.length, b.length);\n\n\treturn (mlen - v1[b.length]) / mlen;\n}\n\n/**\n * Computes the n-gram edit distance for any n (defaults to 2).\n *\n * NOTE: this implementation is based on the one found in the\n * Lucene Java library.\n *\n * h3 Examples:\n *\n *     wuzzy.ngram(\n *     \t\t['D', 'W', 'A', 'Y', 'N', 'E'],\n *     \t\t['D', 'U', 'A', 'N', 'E']\n *     \t);\n *     \t// -> 0.583\n *\n * \t\tor\n *\n *     wuzzy.ngram(\n *     \t\t'DWAYNE',\n *     \t\t'DUANE'\n *     \t);\n *     \t// -> 0.583\n * \n * @param  {String/Array} a - the first string/array to compare\n * @param  {String/Array} b - the second string/array to compare\n * @param  {Number} ng - (optional) the n-gram size to work with (defaults to 2)\n * @return {Number}   returns the ngram distance for\n * the two provided arrays.\n */\nexports.ngram = function (a, b, ng) {\n\ta = ensureArr(a);\n\tb = ensureArr(b);\n\n\tvar al = a.length;\n\tvar bl = b.length;\n\tvar n = (ng ? ng : 2);\n\tvar cost;\n\tvar i, j, ni, ti, tn, ec;\n\tvar sa = [];\n\tvar p  = [];\n\tvar d = [];\n\tvar _d = [];\n\tvar t_j = [];\n\tvar pdl = al + 1;\n\n\t// empty string situation\n\tif ((al === 0) || (bl === 0)) {\n\t\tif (al === bl) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// smaller than n situation\n\tcost = 0;\n\tif ((al < n) || (bl < n)) {\n\t\tfor (i = 0, ni = Math.min(al, bl); i < ni; i++) {\n\t\t\tif (a[i] === b[i]) {\n\t\t\t\tcost++;\n\t\t\t}\n\t\t}\n\t\treturn cost / Math.max(al, bl);\n\t}\n\n\tfor (i = 0; i < (al + n - 1); i++) {\n\t\tif (i < (n - 1)) {\n\t\t\tsa[i] = 0;\n\t\t} else {\n\t\t\tsa[i] = a[i - n + 1];\n\t\t}\n\t}\n\n\tfor (i = 0; i <= al; i++) {\n\t\tp[i] = i;\n\t}\n\n\tfor (j = 1; j <= bl; j++) {\n\t\tif (j < n) {\n\t\t\tfor (ti = 0; ti < (n - j); ti++) {\n\t\t\t\tt_j[ti] = 0;\n\t\t\t}\n\t\t\tfor (ti = (n - j); ti < n; ti++) {\n\t\t\t\tt_j[ti] = b[ti - (n - j)];\n\t\t\t}\n\t\t} else {\n\t\t\tt_j = b.slice(j - n, j);\n\t\t}\n\t\td[0] = j;\n\t\tfor (i = 1; i <= al; i++) {\n\t\t\tcost = 0;\n\t\t\ttn = n;\n\t\t\tfor (ni = 0; ni < n; ni++) {\n\t\t\t\tif (sa[i - 1 + ni] !== t_j[ni]) {\n\t\t\t\t\tcost++;\n\t\t\t\t} else if (sa[i - 1 + ni] === 0) {\n\t\t\t\t\ttn--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tec = cost / tn;\n\t\t\td[i] = Math.min(\n\t\t\t\tMath.min(\n\t\t\t\t\td[i - 1] + 1,\n\t\t\t\t\tp[i] + 1\n\t\t\t\t),\n\t\t\t\tp[i - 1] + ec\n\t\t\t);\n\t\t}\n\n\t\t_d = p;\n\t\tp = d;\n\t\td = _d;\n\t}\n\n\treturn 1.0 - (p[al] / Math.max(al, bl));\n}\n\n/**\n * Calculates a pearson correlation score for two given\n * objects (compares values of similar keys).\n *\n * h3 Examples:\n *\n *     wuzzy.pearson(\n *     \t\t{a: 2.5, b: 3.5, c: 3.0, d: 3.5, e: 2.5, f: 3.0},\n *     \t\t{a: 3.0, b: 3.5, c: 1.5, d: 5.0, e: 3.5, f: 3.0, g: 5.0}\n *     \t);\n *     \t// -> 0.396\n *\n * \t\tor\n *\n *     wuzzy.pearson(\n *     \t\t{a: 2.5, b: 1},\n *     \t\t{o: 3.5, e: 6.0}\n *     \t);\n *     \t// -> 1.0\n * \n * @param  {Object} a - the first object to compare\n * @param  {Object} b - the second object to compare\n * @return {Number}   returns the pearson correlation for\n * the two provided arrays.\n */\nexports.pearson = function (a, b) {\n\tvar sk = [];\n\tObject.keys(a).forEach(function (k) {\n\t\tif (b[k]) {\n\t\t\tsk.push(k);\n\t\t}\n\t});\n\tvar n = sk.length;\n\n\tif (n === 0) {\n\t\treturn 0;\n\t}\n\n\tvar sa = sum(sk.map(function (k) {\n\t\treturn a[k];\n\t}));\n\tvar sb = sum(sk.map(function (k) {\n\t\treturn b[k];\n\t}));\n\n\tvar sas = sum(sk.map(function (k) {\n\t\treturn Math.pow(a[k], 2);\n\t}));\n\n\tvar sbs = sum(sk.map(function (k) {\n\t\treturn Math.pow(b[k], 2);\n\t}));\n\n\tvar sp = sum(sk.map(function (k) {\n\t\treturn a[k] * b[k];\n\t}));\n\n\tvar num = sp - (sa * sb / n);\n\tvar den = Math.sqrt((sas - Math.pow(sa, 2) / n) * (sbs - Math.pow(sb, 2) / n));\n\n\tif (den === 0) {\n\t\treturn 0;\n\t} else {\n\t\treturn num / den;\n\t}\n}\n\n/**\n * Calculates the jaccard index for the two\n * provided arrays.\n *\n * h3 Examples:\n *\n *     wuzzy.jaccard(\n *     \t\t['a', 'b', 'c', 'd', 'e', 'f'],\n *     \t\t['a', 'e', 'f']\n *     \t);\n *     \t// -> 0.5\n *\n * \t\tor\n *\n *     wuzzy.jaccard(\n *     \t\t'abcdef',\n *     \t\t'aef'\n *     \t);\n *     \t// -> 0.5\n *\n * \t\tor \n *\n *     wuzzy.jaccard(\n *     \t\t['abe', 'babe', 'cabe', 'dabe', 'eabe', 'fabe'],\n *     \t\t['babe']\n *     \t);\n *     \t// -> 0.16666667\n * \n * @param  {String/Array} a - the first string/array to compare\n * @param  {String/Array} b - the second string/array to compare\n * @return {Number}   returns the jaccard index for\n * the two provided arrays.\n */\nexports.jaccard = function (a, b) {\n\ta = ensureArr(a);\n\tb = ensureArr(b);\n\n\treturn (_.intersection(a, b).length / _.union(a, b).length);\n}\n\n/**\n * Calculates the tanimoto distance (weighted jaccard index).\n *\n * h3 Examples:\n *\n *     wuzzy.tanimoto(\n *     \t\t['a', 'b', 'c', 'd', 'd', 'e', 'f', 'f'],\n *     \t\t['a', 'e', 'f']\n *     \t);\n *     \t// -> 0.375\n *\n * \t\tor\n *\n *     wuzzy.tanimoto(\n *     \t\t'abcddeff',\n *     \t\t'aef'\n *     \t);\n *     \t// -> 0.375\n *\n * \t\tor \n *\n *     wuzzy.tanimoto(\n *     \t\t['abe', 'babe', 'cabe', 'dabe', 'eabe', 'fabe', 'fabe'],\n *     \t\t['babe']\n *     \t);\n *     \t// -> 0.14285714\n * \n * @param  {String/Array} a - the first string/array to compare\n * @param  {String/Array} b - the second string/array to compare\n * @return {Number}   returns the tanimoto distance for\n * the two provided arrays.\n */\nexports.tanimoto = function (a, b) {\n\ta = ensureArr(a);\n\tb = ensureArr(b);\n\n\tvar both = _.intersection(a, b).length;\n\treturn  (both / (a.length + b.length - both));\n}\n","/home/travis/build/npmtest/node-npmtest-wuzzy/node_modules/wuzzy/Gruntfile.js":"var mocha = require('mocha');\n\nmodule.exports = function (grunt) {\n\n\t/* add the grunt-mocha-test task */\n\tgrunt.loadNpmTasks('grunt-mocha-test');\n\n\t/* grunt configuration */\n\tgrunt.initConfig({\n\t\tmochaTest: {\n\t\t\ttest: {\n\t\t\t\toptions: {\n\t\t\t\t\treporter: 'spec'\n\t\t\t\t},\n\t\t\t\tsrc: ['tests/*.js']\n\t\t\t}\n\t\t}\n\t});\n\n\t/* test task */\n\tgrunt.registerTask('test', 'mochaTest');\n\n\t/* documentation generation task */\n\tgrunt.registerTask('documentation', function () {\n\t\tvar markdox = require('markdox');\n\t\tvar done = this.async();\n\n\t\tvar files = [\n\t\t\t'./index.js'\n\t\t];\n\n\t\tmarkdox.process(files, 'documentation.md', done);\n\t});\n};"}